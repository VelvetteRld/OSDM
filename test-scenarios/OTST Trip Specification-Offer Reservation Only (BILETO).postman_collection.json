{
	"info": {
		"_postman_id": "c9f4390f-9b06-4629-8622-459a7bc1ff5f",
		"name": "OTST Trip Specification-Offer Reservation Only (BILETO)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01. Get Offer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"eval(globals.osdmHelpers);\r",
							"\r",
							"osdmTripSpecification([\r",
							"    new TripLegDefinition(\r",
							"        pm.globals.get(\"leg_1_start_stop_place_ref\"),\r",
							"        pm.globals.get(\"leg_1_start_datetime\"),\r",
							"        pm.globals.get(\"leg_1_end_stop_place_ref\"),\r",
							"        pm.globals.get(\"leg_1_end_datetime\"),\r",
							"        pm.globals.get(\"leg_1_product_category_ref\"),\r",
							"        pm.globals.get(\"leg_1_product_category_name\"),\r",
							"        pm.globals.get(\"leg_1_product_category_short_name\"),\r",
							"        pm.globals.get(\"leg_1_vehicle_number\"),\r",
							"        pm.globals.get(\"leg_1_operator_code\")\r",
							"    )\r",
							"]);\r",
							"\r",
							"osdmAnonymousPassengerSpecifications(1);\r",
							"\r",
							"osdmOfferSearchCriteria(\r",
							"    pm.globals.get(OFFER.SEARCH_CRITERIA_CURRENCY),\r",
							"    null,\r",
							"    [OfferPartType.RESERVATION],\r",
							"    null,\r",
							"    [ServiceClassType.STANDARD],\r",
							"    [TravelClass.SECOND],\r",
							"    null\r",
							");\r",
							"\r",
							"osdmFulfillmentOptions([\r",
							"    new FulfillmentOption(FulfillmentOptionType.ETICKET, FulfillmentMediaType.PDF_A4)\r",
							"]);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"eval(globals.osdmHelpers);",
							"",
							"pm.test('Successfully received offers', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test('Got single offer', function () {",
							"    pm.expect(jsonData.offers).to.have.lengthOf(1);",
							"});",
							"",
							"var offer = jsonData.offers[0];",
							"",
							"validateOfferConformsToOfferSearchCriteria(offer);",
							"",
							"pm.globals.set(\"offer_id\", offer.offerId);",
							"",
							"var reservationOfferPart = offer.reservationOfferParts[0];",
							"pm.globals.set(\"reservation_id\", reservationOfferPart.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"objectType\": \"OfferCollectionRequest\",\n    \"tripSpecifications\": {{offer_trip_specifications}},\n    \"anonymousPassengerSpecifications\": {{offer_passenger_specifications}},\n    \"offerSearchCriteria\": {{offer_search_criteria}},\n    \"requestedFulfillmentOptions\": {{offer_fulfillment_options}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_base}}/offers",
					"host": [
						"{{api_base}}"
					],
					"path": [
						"offers"
					]
				}
			},
			"response": []
		},
		{
			"name": "02. Get Place Maps for Reservation of Offer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"var preSelection = jsonData.vehicleAvailability.preSelections[0];\r",
							"var coach = jsonData.vehicleAvailability.vehicle.coaches[0];\r",
							"pm.globals.set(\"preselected_coach\", preSelection.coach);\r",
							"pm.globals.set(\"preselected_place\", preSelection.place);\r",
							"pm.globals.set(\"layout_id\", coach.layoutId)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Access-Token",
						"value": "{{access_token}}",
						"description": "Legacy Authorization Header; remove for 2.0",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{api_base}}/availabilities/place-map?contextId={{offer_id}}&contextType=OFFER&resourceId={{reservation_id}}&resourceType=RESERVATION",
					"host": [
						"{{api_base}}"
					],
					"path": [
						"availabilities",
						"place-map"
					],
					"query": [
						{
							"key": "contextId",
							"value": "{{offer_id}}"
						},
						{
							"key": "contextType",
							"value": "OFFER"
						},
						{
							"key": "resourceId",
							"value": "{{reservation_id}}"
						},
						{
							"key": "resourceType",
							"value": "RESERVATION"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "03. Create a Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.globals.set(\"booking_id\", jsonData.booking.id);\r",
							"pm.globals.set(\"passenger_id\", jsonData.booking.passengers[0].id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require('uuid');\r",
							"\r",
							"pm.globals.set(\"booking_external_ref\", uuid.v4());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Access-Token",
						"value": "{{access_token}}",
						"description": "Legacy Authorization Header; remove for 2.0",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Requestor",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"offers\": [\r\n        {\r\n            \"offerId\": \"{{offer_id}}\",\r\n            \"placeSelections\": [\r\n                {\r\n                    \"reservationId\": \"{{reservation_id}}\",\r\n                    \"places\": [\r\n                        {\r\n                            \"coachNumber\": \"{{preselected_coach}}\",\r\n                            \"placeNumber\": \"{{preselected_place}}\",\r\n                            \"passengerRef\": \"{{passenger_specification_1_external_ref}}\"\r\n                        }\r\n                    ],\r\n                    \"tripLegCoverage\" : {\r\n                        \"tripId\": \"{{trip_id}}\",\r\n                        \"legId\" : \"{{leg_id}}\"\r\n                    }\r\n                }\r\n            ],\r\n            \"passengerRefs\": [\r\n                \"{{passenger_specification_1_external_ref}}\"\r\n            ]\r\n        }\r\n    ],\r\n    \"passengerSpecifications\": [\r\n        {\r\n            \"externalRef\": \"{{passenger_specification_1_external_ref}}\",\r\n            \"dateOfBirth\": \"1996-01-01\",\r\n            \"type\": \"PERSON\"\r\n        }\r\n    ],\r\n    \"externalRef\": \"{{booking_external_ref}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_base}}/bookings",
					"host": [
						"{{api_base}}"
					],
					"path": [
						"bookings"
					]
				}
			},
			"response": []
		},
		{
			"name": "04. Obtaining Fulfillments from Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Fulfillment for one booking obtained\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var fulfillments = jsonData.fulfillments;\r",
							"    pm.expect(fulfillments.length).to.eql(1);\r",
							"\r",
							"    pm.globals.set(\"fulfillment_id\", jsonData.fulfillments[0].id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Access-Token",
						"value": "{{access_token}}",
						"description": "Legacy Authorization Header; remove for 2.0",
						"type": "text"
					},
					{
						"key": "Requestor",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{api_base}}/bookings/{{booking_id}}/fulfillments",
					"host": [
						"{{api_base}}"
					],
					"path": [
						"bookings",
						"{{booking_id}}",
						"fulfillments"
					]
				}
			},
			"response": []
		}
	]
}